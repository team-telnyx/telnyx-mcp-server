name: Remote Server Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/telnyx_mcp_server/remote/**'
      - 'requirements.txt'
      - '.github/workflows/remote-server-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/telnyx_mcp_server/remote/**'
      - 'requirements.txt'
      - '.github/workflows/remote-server-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Test remote server imports
      run: |
        python test_remote_server.py
    
    - name: Test FastAPI app
      run: |
        python -c "from telnyx_mcp_server.remote.server import app; print('✅ FastAPI app imports successfully')"
    
    - name: Check OAuth endpoints
      run: |
        python -c "
        from telnyx_mcp_server.remote.server import app
        routes = [r.path for r in app.routes]
        required = ['/auth/login', '/auth/callback', '/mcp/stream', '/test-auth']
        missing = [r for r in required if r not in routes]
        if missing:
            print(f'❌ Missing routes: {missing}')
            exit(1)
        else:
            print('✅ All required OAuth and MCP routes present')
        "