[project]
name = "telnyx-mcp-server"
version = "0.5.0"
description = "Telnyx MCP Server"
authors = [
    {name = "Telnyx Engineering", email = "engineering@telnyx.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.7.2,<3.0.0",
    "pydantic-settings>=2.2.1",
    "python-dotenv>=1.0.1",
    "httpx>=0.27.0",
    "mcp>=1.3.0",
    "fastmcp>=0.4.0,<0.5.0",
    "requests>=2.32.2",
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "ngrok>=0.9.0",  # Official ngrok-python SDK (no binary dependency)
    "boto3==1.35.99",
    "gunicorn>=20.1.0",
    "pyjwt>=2.8.0",
    "python-multipart>=0.0.9",
    "azure-identity>=1.15.0",
    "sse-starlette>=2.0.0"
]

[project.optional-dependencies]
dev = [
    "ruff>=0.11.8",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
]
webhook = [
    "ngrok>=0.9.0",  # Official ngrok-python SDK (no binary dependency)
]

[project.scripts]
start = "telnyx_mcp_server.server:run_server"
telnyx-mcp-server = "telnyx_mcp_server.server:main"
telnyx-mcp-server-remote = "telnyx_mcp_server.remote.server:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests", "."]
python_files = ["test_*.py"]

[tool.ruff]
line-length = 79
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["I", "F401"]  # Enable import sorting
fixable = ["I", "F401"]  # Make import sorting fixable

[tool.ruff.lint.isort]
force-single-line = false
force-sort-within-sections = true
combine-as-imports = true
